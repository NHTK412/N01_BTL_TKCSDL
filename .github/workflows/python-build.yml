name: Build Python App for All Platforms

on:
  push:
    tags:
      - "v*"  # Chỉ chạy khi push tag bắt đầu với "v"
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: main_window-linux
          - os: windows-latest
            artifact_name: main_window-windows.exe
          - os: macos-latest
            artifact_name: main_window-macos

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Build with PyInstaller (Windows)
        if: matrix.os == 'windows-latest'
        working-directory: ./src
        run: |
          pyinstaller --onefile --noconsole main_window.py
          move dist\main_window.exe dist\main_window-windows.exe

      - name: Build with PyInstaller (Linux/macOS)
        if: matrix.os != 'windows-latest'
        working-directory: ./src
        run: |
          pyinstaller --onefile --noconsole main_window.py
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            mv dist/main_window dist/main_window-linux
          else
            mv dist/main_window dist/main_window-macos
          fi

      - name: Upload artifacts (for non-tag pushes)
        if: "!startsWith(github.ref, 'refs/tags/')"
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: src/dist/${{ matrix.artifact_name }}

      - name: Upload to GitHub Release (for tag pushes)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: src/dist/${{ matrix.artifact_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}